{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\dra_g\\\\Documents\\\\GitHub\\\\SocialService\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport firebase from 'firebase/compat/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afauth) {\n    this.afauth = afauth;\n  }\n\n  login(email, pass) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        return yield _this.afauth.signInWithEmailAndPassword(email, pass);\n      } catch (err) {\n        console.log(\"Error en el login\", err);\n        return null;\n      }\n    })();\n  }\n\n  loginWithGoogle() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        return yield _this2.afauth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n      } catch (err) {\n        console.log(\"Error en el login de google\", err);\n        return null;\n      }\n    })();\n  }\n\n  getUserLogged() {\n    return this.afauth.authState;\n  }\n\n  logOut() {\n    this.afauth.signOut();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/dra_g/Documents/GitHub/SocialService/src/app/Services/auth/auth.service.ts"],"names":["firebase","i0","i1","AuthService","constructor","afauth","login","email","pass","signInWithEmailAndPassword","err","console","log","loginWithGoogle","signInWithPopup","auth","GoogleAuthProvider","getUserLogged","authState","logOut","signOut","ɵfac","AuthService_Factory","t","ɵɵinject","AngularFireAuth","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,KAAK,CAACC,KAAD,EAAQC,IAAR,EAAc;AAAA;;AAAA;AACrB,UAAI;AACA,qBAAa,KAAI,CAACH,MAAL,CAAYI,0BAAZ,CAAuCF,KAAvC,EAA8CC,IAA9C,CAAb;AACH,OAFD,CAGA,OAAOE,GAAP,EAAY;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACA,eAAO,IAAP;AACH;AAPoB;AAQxB;;AACKG,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAI;AACA,qBAAa,MAAI,CAACR,MAAL,CAAYS,eAAZ,CAA4B,IAAId,QAAQ,CAACe,IAAT,CAAcC,kBAAlB,EAA5B,CAAb;AACH,OAFD,CAGA,OAAON,GAAP,EAAY;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAA3C;AACA,eAAO,IAAP;AACH;AAPmB;AAQvB;;AACDO,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKZ,MAAL,CAAYa,SAAnB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,SAAKd,MAAL,CAAYe,OAAZ;AACH;;AA3BoB;;AA6BzBjB,WAAW,CAACkB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,WAAV,EAAuBF,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,eAAf,CAAvB,CAAP;AAAiE,CAAtH;;AACAtB,WAAW,CAACuB,KAAZ,GAAoB,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,WAAT;AAAsB0B,EAAAA,OAAO,EAAE1B,WAAW,CAACkB,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/fire/compat/auth\";\r\nexport class AuthService {\r\n    constructor(afauth) {\r\n        this.afauth = afauth;\r\n    }\r\n    async login(email, pass) {\r\n        try {\r\n            return await this.afauth.signInWithEmailAndPassword(email, pass);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error en el login\", err);\r\n            return null;\r\n        }\r\n    }\r\n    async loginWithGoogle() {\r\n        try {\r\n            return await this.afauth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error en el login de google\", err);\r\n            return null;\r\n        }\r\n    }\r\n    getUserLogged() {\r\n        return this.afauth.authState;\r\n    }\r\n    logOut() {\r\n        this.afauth.signOut();\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}